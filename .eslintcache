[{"/home/wales/Desktop/microverse/react/movieflix/src/index.js":"1","/home/wales/Desktop/microverse/react/movieflix/src/store.js":"2","/home/wales/Desktop/microverse/react/movieflix/src/reducers/index.js":"3","/home/wales/Desktop/microverse/react/movieflix/src/components/App.js":"4","/home/wales/Desktop/microverse/react/movieflix/src/components/NavBar.js":"5","/home/wales/Desktop/microverse/react/movieflix/src/components/Banner.js":"6","/home/wales/Desktop/microverse/react/movieflix/src/components/MovieCard.js":"7","/home/wales/Desktop/microverse/react/movieflix/src/containers/MovieRow.js":"8","/home/wales/Desktop/microverse/react/movieflix/src/pages/HomePage.js":"9","/home/wales/Desktop/microverse/react/movieflix/src/helpers/data.js":"10","/home/wales/Desktop/microverse/react/movieflix/src/helpers/constants.js":"11","/home/wales/Desktop/microverse/react/movieflix/src/helpers/common.js":"12","/home/wales/Desktop/microverse/react/movieflix/src/components/Filter.js":"13","/home/wales/Desktop/microverse/react/movieflix/src/reducers/filter.js":"14","/home/wales/Desktop/microverse/react/movieflix/src/actions/type.js":"15","/home/wales/Desktop/microverse/react/movieflix/src/reducers/genre.js":"16","/home/wales/Desktop/microverse/react/movieflix/src/pages/VideoPage.js":"17","/home/wales/Desktop/microverse/react/movieflix/src/reducers/movie.js":"18","/home/wales/Desktop/microverse/react/movieflix/src/actions/movie.js":"19","/home/wales/Desktop/microverse/react/movieflix/src/actions/genres.js":"20","/home/wales/Desktop/microverse/react/movieflix/src/actions/filter.js":"21","/home/wales/Desktop/microverse/react/movieflix/src/pages/NotFound.js":"22"},{"size":353,"mtime":1608193265999,"results":"23","hashOfConfig":"24"},{"size":350,"mtime":1608210242635,"results":"25","hashOfConfig":"24"},{"size":198,"mtime":1608195459808,"results":"26","hashOfConfig":"24"},{"size":606,"mtime":1608236200990,"results":"27","hashOfConfig":"24"},{"size":1082,"mtime":1608236597255,"results":"28","hashOfConfig":"24"},{"size":3762,"mtime":1608240919260,"results":"29","hashOfConfig":"24"},{"size":1753,"mtime":1608222586548,"results":"30","hashOfConfig":"24"},{"size":4522,"mtime":1608234835551,"results":"31","hashOfConfig":"24"},{"size":1643,"mtime":1608229120394,"results":"32","hashOfConfig":"24"},{"size":105,"mtime":1608129938290,"results":"33","hashOfConfig":"24"},{"size":831,"mtime":1608182441165,"results":"34","hashOfConfig":"24"},{"size":496,"mtime":1608223323444,"results":"35","hashOfConfig":"24"},{"size":1131,"mtime":1608234571427,"results":"36","hashOfConfig":"24"},{"size":201,"mtime":1608234654196,"results":"37","hashOfConfig":"24"},{"size":119,"mtime":1608194936157,"results":"38","hashOfConfig":"24"},{"size":200,"mtime":1608158007993,"results":"39","hashOfConfig":"24"},{"size":2634,"mtime":1608227198252,"results":"40","hashOfConfig":"24"},{"size":198,"mtime":1608195446130,"results":"41","hashOfConfig":"24"},{"size":105,"mtime":1608211153451,"results":"42","hashOfConfig":"24"},{"size":109,"mtime":1608229120394,"results":"43","hashOfConfig":"24"},{"size":109,"mtime":1608233879650,"results":"44","hashOfConfig":"24"},{"size":352,"mtime":1608237581611,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1dmavn8",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/home/wales/Desktop/microverse/react/movieflix/src/index.js",[],["93","94","95","96","97","98","99"],"/home/wales/Desktop/microverse/react/movieflix/src/store.js",[],"/home/wales/Desktop/microverse/react/movieflix/src/reducers/index.js",[],"/home/wales/Desktop/microverse/react/movieflix/src/components/App.js",[],"/home/wales/Desktop/microverse/react/movieflix/src/components/NavBar.js",[],"/home/wales/Desktop/microverse/react/movieflix/src/components/Banner.js",["100","101","102"],"/home/wales/Desktop/microverse/react/movieflix/src/components/MovieCard.js",[],"/home/wales/Desktop/microverse/react/movieflix/src/containers/MovieRow.js",["103","104"],"/* eslint-disable import/no-named-as-default */\n/* eslint-disable consistent-return */\n/* eslint-disable camelcase */\nimport { Grid, makeStyles } from '@material-ui/core';\nimport React, { useEffect, useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport Youtube from 'react-youtube';\nimport PropTypes from 'prop-types';\nimport MovieCard from '../components/MovieCard';\nimport Filter from '../components/Filter';\nimport fetch from '../helpers/data';\nimport { imageBaseUrl, youtubeOptions } from '../helpers/constants';\nimport { filterMovies, getYoutubeVideoId } from '../helpers/common';\nimport filterAction from '../actions/filter';\n\nconst useStyles = makeStyles(theme => ({\n  itemRoot: {\n    padding: '0 !important',\n  },\n  container: {\n    flexWrap: 'nowrap',\n    'overflow-x': 'scroll',\n    padding: theme.spacing(2, 0),\n  },\n  heading: {\n    padding: '15px 0',\n  },\n}));\nfunction MovieRow({\n  title, moviesUrl, filterParam, moviesFilter, id, allGenres,\n}) {\n  const classes = useStyles();\n  const [movies, setMovies] = useState(null);\n  const parentSectionId = useRef('');\n  const [genres, setGenres] = useState([]);\n  const [trailerId, setTrailerId] = useState('');\n  useEffect(async () => {\n    const fetchMovies = async () => {\n      const { data: { results } } = await fetch.get(moviesUrl);\n\n      return results.map(({\n        id, poster_path, genre_ids, title, name, overview, first_air_date, release_date,\n      }) => ({\n        id,\n        imageUrl: imageBaseUrl + poster_path,\n        genreIds: genre_ids,\n        name: title || name,\n        overview,\n        releaseDate: first_air_date || release_date,\n      }));\n    };\n\n    try {\n      const data = await fetchMovies();\n      setMovies(data);\n      const flattedGenresArr = data.map(({ genreIds }) => (genreIds)).flat();\n      const uniqGenres = new Set(flattedGenresArr);\n      setGenres([...uniqGenres]);\n    } catch (error) {\n      console.log('Error occurred', error);\n    }\n  }, []);\n\n  const setMoviesToDisplay = () => {\n    if (parentSectionId.current === id) {\n      return filterMovies(movies, filterParam);\n    }\n    return movies;\n  };\n\n  const handleFilter = e => {\n    const section = e.target.closest('section');\n    if (id === section.id) {\n      moviesFilter(e.target.value);\n      parentSectionId.current = section.id;\n    }\n  };\n\n  const handleTrailerClick = async name => {\n    if (trailerId) {\n      setTrailerId('');\n    } else {\n      try {\n        const id = await getYoutubeVideoId(name);\n        setTrailerId(id);\n      } catch (error) {\n        console.log('Url Error', error);\n      }\n    }\n  };\n\n  const allMovies = filterParam.toString() === '0' ? movies : setMoviesToDisplay();\n  return (\n    <div className=\"container\">\n      <section id={id}>\n        <Grid className={classes.heading} container justify=\"space-between\" alignItems=\"center\">\n          <Grid item>\n            <h5 className=\"section__heading\">{title}</h5>\n          </Grid>\n          <Grid item>\n            <Filter\n              allGenres={allGenres}\n              handleFilter={handleFilter}\n              genres={genres}\n            />\n          </Grid>\n        </Grid>\n        <Grid className={`${classes.container} scrollbar`} container spacing={3}>\n          {allMovies?.map(({\n            id, imageUrl, name, overview, releaseDate, genreIds,\n          }) => (\n            <Grid className={classes.itemRoot} item key={id}>\n              <MovieCard\n                id={id}\n                name={name}\n                handleTrailerClick={handleTrailerClick}\n                imgUrl={imageUrl}\n                desc={overview}\n                releaseDate={releaseDate}\n                genres={genreIds}\n                overview={overview}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      </section>\n      {trailerId && <Youtube videoId={trailerId} opts={youtubeOptions} />}\n    </div>\n  );\n}\n\nMovieRow.propTypes = {\n  title: PropTypes.string.isRequired,\n  moviesUrl: PropTypes.string.isRequired,\n  filterParam: PropTypes.number.isRequired,\n  moviesFilter: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n  allGenres: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n  })).isRequired,\n};\n\nconst mapStateToProps = state => ({\n  filterParam: state.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  moviesFilter: param => dispatch(filterAction(param)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieRow);\n","/home/wales/Desktop/microverse/react/movieflix/src/pages/HomePage.js",[],"/home/wales/Desktop/microverse/react/movieflix/src/helpers/data.js",[],"/home/wales/Desktop/microverse/react/movieflix/src/helpers/constants.js",[],"/home/wales/Desktop/microverse/react/movieflix/src/helpers/common.js",[],"/home/wales/Desktop/microverse/react/movieflix/src/components/Filter.js",[],"/home/wales/Desktop/microverse/react/movieflix/src/reducers/filter.js",[],"/home/wales/Desktop/microverse/react/movieflix/src/actions/type.js",[],"/home/wales/Desktop/microverse/react/movieflix/src/reducers/genre.js",[],"/home/wales/Desktop/microverse/react/movieflix/src/pages/VideoPage.js",["105"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport Youtube from 'react-youtube';\nimport { format } from 'date-fns';\nimport { getYoutubeVideoId } from '../helpers/common';\n\nexport const VideoPage = ({ movie, allGenres }) => {\n  const history = useHistory();\n  if (!movie || !Object.keys(movie).length) {\n    history.push('/');\n  }\n  const [trailerId, setTrailerId] = useState('null');\n  const {\n    name, imgUrl, overview, releaseDate, genres,\n  } = movie;\n\n  useEffect(async () => {\n    try {\n      const videoId = await getYoutubeVideoId(name);\n      setTrailerId(videoId);\n    } catch (error) {\n      console.log(error);\n    }\n  });\n\n  const genresArr = genres?.map(id => (\n    allGenres?.find(gen => gen.id === id)\n  )).filter(item => item);\n\n  const opts = {\n    height: '500px',\n    width: '100%',\n    autoplay: 1,\n  };\n\n  return (\n    <div className=\"video\">\n      <div className=\"video__wrapper\">\n        <div className=\"d-flex video__header\">\n          <h2>{name}</h2>\n          <span>\n            (\n            {releaseDate?.split('-')[0]}\n            )\n          </span>\n        </div>\n        <div className=\"video__content\">\n          <div className=\"d-flex video__media\">\n            <div className=\"video__poster\">\n              <img src={imgUrl} alt=\"Movie Poster\" />\n            </div>\n            <div className=\"video__trailer\">\n              {trailerId && <Youtube videoId={trailerId} opts={opts} />}\n            </div>\n          </div>\n        </div>\n        <div className=\"video__description\">\n          <p>{overview}</p>\n        </div>\n        <div className=\"video__footer\">\n          <div>\n            <p>Release date</p>\n            <p>{releaseDate && format(new Date(releaseDate), 'd LLLL yyyy')}</p>\n          </div>\n          <ul className=\"video__genres\">\n            {genresArr?.map(({ name, id }) => <li key={id}>{name}</li>)}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nVideoPage.propTypes = {\n  movie: PropTypes.shape({\n    imgUrl: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    releaseDate: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.number).isRequired,\n  }).isRequired,\n  allGenres: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n  })).isRequired,\n};\n\nconst mapStateToProps = ({ movie, genres }) => ({\n  movie,\n  allGenres: genres,\n});\n\nexport default connect(mapStateToProps)(VideoPage);\n","/home/wales/Desktop/microverse/react/movieflix/src/reducers/movie.js",[],"/home/wales/Desktop/microverse/react/movieflix/src/actions/movie.js",[],"/home/wales/Desktop/microverse/react/movieflix/src/actions/genres.js",[],"/home/wales/Desktop/microverse/react/movieflix/src/actions/filter.js",[],"/home/wales/Desktop/microverse/react/movieflix/src/pages/NotFound.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":30,"column":7,"nodeType":"122","messageId":"123","endLine":30,"endColumn":18},{"ruleId":"120","severity":1,"message":"121","line":79,"column":9,"nodeType":"122","messageId":"123","endLine":79,"endColumn":20},{"ruleId":"120","severity":1,"message":"121","line":85,"column":3,"nodeType":"122","messageId":"123","endLine":85,"endColumn":14},{"ruleId":"120","severity":1,"message":"121","line":60,"column":7,"nodeType":"122","messageId":"123","endLine":60,"endColumn":18},{"ruleId":"120","severity":1,"message":"121","line":87,"column":9,"nodeType":"122","messageId":"123","endLine":87,"endColumn":20},{"ruleId":"120","severity":1,"message":"121","line":24,"column":7,"nodeType":"122","messageId":"123","endLine":24,"endColumn":18},"jsx-a11y/accessible-emoji",[],"lines-around-directive",["124"],"no-spaced-func",["125"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","padding-line-between-statements","func-call-spacing"]